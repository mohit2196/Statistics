<?xml version="1.0" encoding="UTF-8"?><sqlb_project><db path="C:/Users/SharmaM/Desktop/Project/archive/project_1.db" readonly="0" foreign_keys="1" case_sensitive_like="0" temp_store="0" wal_autocheckpoint="1000" synchronous="2"/><attached/><window><main_tabs open="structure browser pragmas query" current="3"/></window><tab_structure><column_width id="0" width="300"/><column_width id="1" width="0"/><column_width id="2" width="100"/><column_width id="3" width="4936"/><column_width id="4" width="0"/><expanded_item id="0" parent="1"/><expanded_item id="1" parent="1"/><expanded_item id="2" parent="1"/><expanded_item id="3" parent="1"/></tab_structure><tab_browse><current_table name="4,15:mainpositivity_rate"/><default_encoding codec=""/><browse_table_settings><table schema="main" name="StatewiseTestingDetails" show_row_id="0" encoding="" plot_x_axis="" unlock_view_pk="_rowid_"><sort><column index="1" mode="0"/></sort><column_widths><column index="1" value="73"/><column index="2" value="177"/><column index="3" value="93"/><column index="4" value="65"/><column index="5" value="60"/></column_widths><filter_values/><conditional_formats/><row_id_formats/><display_formats/><hidden_columns/><plot_y_axes/><global_filter/></table><table schema="main" name="case_and_deaths_with_time" show_row_id="0" encoding="" plot_x_axis="" unlock_view_pk="_rowid_"><sort/><column_widths><column index="1" value="155"/><column index="2" value="211"/><column index="3" value="192"/><column index="4" value="129"/></column_widths><filter_values/><conditional_formats/><row_id_formats/><display_formats/><hidden_columns/><plot_y_axes/><global_filter/></table><table schema="main" name="covid_19_india" show_row_id="0" encoding="" plot_x_axis="" unlock_view_pk="_rowid_"><sort/><column_widths><column index="1" value="40"/><column index="2" value="73"/><column index="3" value="62"/><column index="4" value="177"/><column index="5" value="165"/><column index="6" value="172"/><column index="7" value="46"/><column index="8" value="54"/><column index="9" value="73"/></column_widths><filter_values/><conditional_formats/><row_id_formats/><display_formats/><hidden_columns/><plot_y_axes/><global_filter/></table><table schema="main" name="covid_vaccine_statewise" show_row_id="0" encoding="" plot_x_axis="" unlock_view_pk="_rowid_"><sort><column index="1" mode="0"/></sort><column_widths><column index="1" value="79"/><column index="2" value="177"/><column index="3" value="165"/><column index="4" value="74"/><column index="5" value="53"/><column index="6" value="154"/><column index="7" value="173"/><column index="8" value="175"/><column index="9" value="189"/><column index="10" value="227"/><column index="11" value="195"/><column index="12" value="210"/><column index="13" value="202"/><column index="14" value="53"/><column index="15" value="221"/><column index="16" value="221"/><column index="17" value="210"/><column index="18" value="237"/><column index="19" value="237"/><column index="20" value="226"/><column index="21" value="191"/><column index="22" value="205"/><column index="23" value="243"/><column index="24" value="181"/></column_widths><filter_values/><conditional_formats/><row_id_formats/><display_formats/><hidden_columns/><plot_y_axes/><global_filter/></table><table schema="main" name="positivity_rate" show_row_id="0" encoding="" plot_x_axis="" unlock_view_pk="_rowid_"><sort/><column_widths><column index="1" value="134"/><column index="2" value="117"/><column index="3" value="126"/><column index="4" value="168"/></column_widths><filter_values/><conditional_formats/><row_id_formats/><display_formats/><hidden_columns/><plot_y_axes/><global_filter/></table><table schema="main" name="state_population" show_row_id="0" encoding="" plot_x_axis="" unlock_view_pk="_rowid_"><sort><column index="6" mode="1"/></sort><column_widths><column index="1" value="40"/><column index="2" value="234"/><column index="3" value="116"/><column index="4" value="82"/><column index="5" value="76"/><column index="6" value="234"/><column index="7" value="155"/></column_widths><filter_values/><conditional_formats/><row_id_formats/><display_formats/><hidden_columns/><plot_y_axes/><global_filter/></table></browse_table_settings></tab_browse><tab_sql><sql name="covid_data.sql">-- looking at total cases vs total Deaths
-- showing chances of dying at with time

SELECT covid_19_india.Date, sum(covid_19_india.Confirmed) as 'cases',
sum(covid_19_india.Deaths) as 'death',((sum(covid_19_india.Deaths)/sum(covid_19_india.Confirmed))*100) as 'death_rate' 
FROM covid_19_india
GROUP by covid_19_india.Date;

-- total cases vs poplation in 2020 that is 1390000000
SELECT covid_19_india.Date, sum(covid_19_india.Confirmed) as 'cases',
((sum(covid_19_india.Confirmed)/1390000000)*1000000) as 'confirmed_in_million' ,((sum(covid_19_india.Deaths)/sum(covid_19_india.Confirmed))*100) as 'death_rate'
FROM covid_19_india
GROUP by covid_19_india.Date;

-- looking at states with highest infection rate

SELECT max(covid_19_india.Confirmed) as 'max_cases',
((sum(covid_19_india.Confirmed)/1390000000)*1000000) as 'confirmed_in_million' ,((sum(covid_19_india.Deaths)/sum(covid_19_india.Confirmed))*100) as 'death_rate'
FROM covid_19_india
GROUP by covid_19_india.Date;

-- number of states

SELECT count(covid_19_india.Sno),covid_19_india.State
FROM covid_19_india
GROUP by covid_19_india.State;

--updating records

UPDATE covid_19_india
SET State = 'A &amp; N Islands'
WHERE State = 'Andaman and Nicobar Islands';

-- joining statewise population in covid 19 india table 

SELECT covid_19_india.State, state_population.Total_population 
FROM covid_19_india LEFT JOIN state_population on covid_19_india.State = state_population.state_
ORDER by covid_19_india.State;
-- WHERE state_population.Total_population is NULL;

-- looking at state with highest infection rate

SELECT f.states, (f.maximum_confirmed/f.popula)*100 as perce FROM (SELECT covid_19_india.State as states, state_population.Total_population2 as popula, max (covid_19_india.Confirmed) as maximum_confirmed
FROM covid_19_india LEFT JOIN state_population on covid_19_india.State = state_population.state_
GROUP by covid_19_india.State, Total_population2) as f
ORDER by perce DESC;
	
--state positivity rate for MP

SELECT covid_19_india.Date, ((covid_19_india.Confirmed /85358965)*100) as infection_rate
FROM covid_19_india WHERE covid_19_india.State = 'Madhya Pradesh';

--Looking at state with highest total death 

SELECT covid_19_india.State, 
sum (covid_19_india.Deaths) as total_deathcount
FROM covid_19_india LEFT JOIN state_population on covid_19_india.State = state_population.state_
GROUP by covid_19_india.State
ORDER by total_deathcount DESC; 

--Looking at state with highest total deathpercent that is how much population vanished due to covid


SELECT covid_19_india.State, 
((sum (covid_19_india.Deaths))/state_population.Total_population2)*100 as total_deathrate
FROM covid_19_india LEFT JOIN state_population on covid_19_india.State = state_population.state_
GROUP by covid_19_india.State, state_population.Total_population2
ORDER by total_deathrate DESC;
   
-- how confirmed cases, deaths and death percent goes with time in country

SELECT covid_19_india.Date, sum(covid_19_india.Confirmed), sum(covid_19_india.Deaths), 
(sum(covid_19_india.Deaths)/sum(covid_19_india.Confirmed))*100 as death_percentage
FROM covid_19_india
GROUP by covid_19_india.Date
ORDER by 1;


-- creating view to data for later visualizations


CREATE VIEW case_and_deaths_with_time as
SELECT covid_19_india.Date, sum(covid_19_india.Confirmed), sum(covid_19_india.Deaths), 
(sum(covid_19_india.Deaths)/sum(covid_19_india.Confirmed))*100 as death_percentage
FROM covid_19_india
GROUP by covid_19_india.Date
ORDER by 1;

CREATE VIEW state_infection_rate as
SELECT f.states, (f.maximum_confirmed/f.popula)*100 as perce FROM (SELECT covid_19_india.State as states, state_population.Total_population2 as popula, max (covid_19_india.Confirmed) as maximum_confirmed
FROM covid_19_india LEFT JOIN state_population on covid_19_india.State = state_population.state_
GROUP by covid_19_india.State, Total_population2) as f
ORDER by perce DESC;
</sql><sql name="covid_testing.sql">SELECT * FROM StatewiseTestingDetails
WHERE Positive is NULL AND Negative is NULL
order by StatewiseTestingDetails.Date;

-- positive and negative cases detail is not present but on covid_19_india table we have seen Confirmed cases
-- that is Positive with respect to time and state 

-- here we how much testing is done during covid time

SELECT StatewiseTestingDetails.Date, sum(TotalSamples)
FROM StatewiseTestingDetails
GROUP by StatewiseTestingDetails.Date
order by 1;

-- total sampling, confirmed and positive rate(if hypothetically test result comes on same day) cases during covid time

select covid_19_india.Date, sum(covid_19_india.Confirmed), sum(StatewiseTestingDetails.TotalSamples), 
(sum(covid_19_india.Confirmed)/sum(StatewiseTestingDetails.TotalSamples))*100 as positive_rate 
FROM covid_19_india LEFT JOIN StatewiseTestingDetails on covid_19_india.Date = StatewiseTestingDetails.Date
GROUP by covid_19_india.Date;

-- positivity rate if by examine we found that on a average test results comes in 3 days 

select covid_19_india.Date, sum(covid_19_india.Confirmed), sum(StatewiseTestingDetails.TotalSamples),
(sum(covid_19_india.Confirmed)/lag(sum(StatewiseTestingDetails.TotalSamples),3)OVER(order by covid_19_india.Date))*100 as positive_rate 
FROM covid_19_india LEFT JOIN StatewiseTestingDetails on covid_19_india.Date = StatewiseTestingDetails.Date
GROUP by covid_19_india.Date;

-- state with maximum sampling 

SELECT StatewiseTestingDetails.State, StatewiseTestingDetails.TotalSamples, StatewiseTestingDetails.Date
FROM StatewiseTestingDetails
WHERE StatewiseTestingDetails.TotalSamples in (SELECT max(TotalSamples)
FROM StatewiseTestingDetails
GROUP by StatewiseTestingDetails.State)
ORDER by StatewiseTestingDetails.TotalSamples DESC;



-- creating views for visualisation


create VIEW positivity_rate as
select covid_19_india.Date, sum(covid_19_india.Confirmed) as confirmed_cases, sum(StatewiseTestingDetails.TotalSamples) as samples_collected,
(sum(covid_19_india.Confirmed)/lag(sum(StatewiseTestingDetails.TotalSamples),3)OVER(order by covid_19_india.Date))*100 as positive_rate 
FROM covid_19_india LEFT JOIN StatewiseTestingDetails on covid_19_india.Date = StatewiseTestingDetails.Date
GROUP by covid_19_india.Date;
</sql><sql name="covid_vaccine.sql">-- Total individual vaccinated with time 

SELECT UpdatedOn, TotalIndividualsVaccinated FROM covid_vaccine_statewise
WHERE covid_vaccine_statewise.UpdatedOn like '%/%/2021' and covid_vaccine_statewise.State = 'India';

-- jan. doses administered (similarly we can check for other months)

SELECT sum(TotalDosesAdministered) as doses, covid_vaccine_statewise.State
FROM covid_vaccine_statewise
WHERE(covid_vaccine_statewise.UpdatedOn) like '%/01/2021'
GROUP by covid_vaccine_statewise.State
ORDER by doses DESC;

-- statewise percentage of population vaccinated 

SELECT covid_vaccine_statewise.State, UpdatedOn, TotalIndividualsVaccinated, state_population.Total_population2,
(TotalIndividualsVaccinated/state_population.Total_population2)*100 as Percent_population_vaccinated
FROM covid_vaccine_statewise JOIN state_population on covid_vaccine_statewise.State = state_population.state_
WHERE covid_vaccine_statewise.UpdatedOn like '%/%/2021' AND State != 'India';

-- we have observed that last data of vaccination collected on 24 june 2021 that is 24/06/2021 and by filtering we can find out
-- Total percentage of population of individual state vaccinated

SELECT covid_vaccine_statewise.State, UpdatedOn, TotalIndividualsVaccinated, state_population.Total_population2,
(TotalIndividualsVaccinated/state_population.Total_population2)*100 as Percent_population_vaccinated
FROM covid_vaccine_statewise JOIN state_population on covid_vaccine_statewise.State = state_population.state_
WHERE covid_vaccine_statewise.UpdatedOn like '24/06/2021' AND State != 'India'
ORDER by Percent_population_vaccinated DESC;


-- creating view for visualisation

CREATE VIEW state_population_vaccinated as
SELECT covid_vaccine_statewise.State, UpdatedOn, TotalIndividualsVaccinated, state_population.Total_population2,
(TotalIndividualsVaccinated/state_population.Total_population2)*100 as Percent_population_vaccinated
FROM covid_vaccine_statewise JOIN state_population on covid_vaccine_statewise.State = state_population.state_
WHERE covid_vaccine_statewise.UpdatedOn like '%/%/2021' AND State != 'India';
 </sql><current_tab id="2"/></tab_sql></sqlb_project>
